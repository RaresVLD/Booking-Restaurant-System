// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantServiceProvider;

namespace RestaurantServiceProvider.Migrations
{
    [DbContext(typeof(RestaurantServiceProviderContext))]
    partial class RestaurantServiceProviderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfPersons")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba32a528-0e5f-454d-98aa-588bb076099c"),
                            BookingDate = new DateTime(2019, 12, 10, 12, 12, 12, 0, DateTimeKind.Unspecified),
                            NumberOfPersons = 3,
                            RestaurantId = new Guid("84b88b63-64ad-4258-ac88-982ddf481033"),
                            UserId = new Guid("8eb22ab1-2241-4f3e-8e44-963edf012d3b")
                        },
                        new
                        {
                            Id = new Guid("8dd21049-aaad-46ba-a9cd-d7721c9d72b9"),
                            BookingDate = new DateTime(2019, 10, 10, 10, 10, 10, 0, DateTimeKind.Unspecified),
                            NumberOfPersons = 5,
                            RestaurantId = new Guid("e20cfcce-f9a7-469e-a110-d027197a6fbd"),
                            UserId = new Guid("1a456110-ced5-4cd3-8410-a96fbfa94059")
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c33aefc-b842-4ffd-acea-620c198c48bb"),
                            Description = "Super gustoase aripioarele de la mama",
                            Name = "AripioareMamma",
                            Price = 20.5,
                            RestaurantId = new Guid("84b88b63-64ad-4258-ac88-982ddf481033")
                        },
                        new
                        {
                            Id = new Guid("cde724e1-d6b3-496f-9db0-25aa25476004"),
                            Description = "Super buna piza de la mama",
                            Name = "PizzaMamma",
                            Price = 30.5,
                            RestaurantId = new Guid("84b88b63-64ad-4258-ac88-982ddf481033")
                        },
                        new
                        {
                            Id = new Guid("b42e7f63-b2c1-407b-9234-1339e6f6b7d7"),
                            Description = "Cel mai bun bors din istoria tatarasi",
                            Name = "BorsSergio",
                            Price = 10.5,
                            RestaurantId = new Guid("e20cfcce-f9a7-469e-a110-d027197a6fbd")
                        },
                        new
                        {
                            Id = new Guid("0a43f6d0-4be6-46c1-8af2-5d33595d46e3"),
                            Description = "Mamaliga goala facuta din malai si apa",
                            Name = "MamaligaSergio",
                            Price = 8.5,
                            RestaurantId = new Guid("e20cfcce-f9a7-469e-a110-d027197a6fbd")
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("84b88b63-64ad-4258-ac88-982ddf481033"),
                            Address = "Centru",
                            Description = "E super central si chirica e patron",
                            Name = "Mamma mia"
                        },
                        new
                        {
                            Id = new Guid("e20cfcce-f9a7-469e-a110-d027197a6fbd"),
                            Address = "Tatarasi",
                            Description = "E super in tatarasi si patron sunt eu",
                            Name = "Serginio"
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8eb22ab1-2241-4f3e-8e44-963edf012d3b"),
                            Email = "tudormanoleasa@gmail.com",
                            FirstName = "Tudor",
                            LastName = "Manoleasa",
                            Password = "parolatudormanoleasa"
                        },
                        new
                        {
                            Id = new Guid("1a456110-ced5-4cd3-8410-a96fbfa94059"),
                            Email = "roxana.apopei@yahoo.com",
                            FirstName = "Roxana",
                            LastName = "Apopei",
                            Password = "parolaroxanaapopei"
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Booking", b =>
                {
                    b.HasOne("RestaurantServiceProvider.Entities.Product", null)
                        .WithMany("Bookings")
                        .HasForeignKey("ProductId");

                    b.HasOne("RestaurantServiceProvider.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Product", b =>
                {
                    b.HasOne("RestaurantServiceProvider.Entities.Booking", null)
                        .WithMany("Products")
                        .HasForeignKey("BookingId");

                    b.HasOne("RestaurantServiceProvider.Entities.Restaurant", "Restaurant")
                        .WithMany("Products")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
