// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RestaurantServiceProvider;

namespace RestaurantServiceProvider.Migrations
{
    [DbContext(typeof(RestaurantServiceProviderContext))]
    partial class RestaurantServiceProviderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfPersons")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9a2bfecb-5332-479c-b5ca-4ec542a3498e"),
                            BookingDate = new DateTime(2019, 12, 10, 12, 12, 12, 0, DateTimeKind.Unspecified),
                            NumberOfPersons = 3,
                            RestaurantId = new Guid("7f851c13-3f69-49e3-ba36-a008aac87a15"),
                            UserId = new Guid("226d9502-9b5c-480f-92fe-cd6d69bc0489")
                        },
                        new
                        {
                            Id = new Guid("34cad41c-19c2-4966-98e0-856e97f0b3f6"),
                            BookingDate = new DateTime(2019, 10, 10, 10, 10, 10, 0, DateTimeKind.Unspecified),
                            NumberOfPersons = 5,
                            RestaurantId = new Guid("15f2d9d8-cd24-4956-8400-4d1e97bb3fc5"),
                            UserId = new Guid("4db60556-b7ff-4833-b60d-7328a4a016d7")
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("RestaurantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba756e15-0cdf-4d50-a755-155d52c27906"),
                            Description = "Super gustoase aripioarele de la mama",
                            Name = "AripioareMamma",
                            Price = 20.5,
                            RestaurantId = new Guid("7f851c13-3f69-49e3-ba36-a008aac87a15")
                        },
                        new
                        {
                            Id = new Guid("b0805f08-bbf5-4eb8-9f65-82d9b27e72c4"),
                            Description = "Super buna piza de la mama",
                            Name = "PizzaMamma",
                            Price = 30.5,
                            RestaurantId = new Guid("7f851c13-3f69-49e3-ba36-a008aac87a15")
                        },
                        new
                        {
                            Id = new Guid("a4997451-d0db-4636-b320-08b68f5d468e"),
                            Description = "Cel mai bun bors din istoria tatarasi",
                            Name = "BorsSergio",
                            Price = 10.5,
                            RestaurantId = new Guid("15f2d9d8-cd24-4956-8400-4d1e97bb3fc5")
                        },
                        new
                        {
                            Id = new Guid("8f164ff1-3854-4de7-bfda-2ab1c9d1fe58"),
                            Description = "Mamaliga goala facuta din malai si apa",
                            Name = "MamaligaSergio",
                            Price = 8.5,
                            RestaurantId = new Guid("15f2d9d8-cd24-4956-8400-4d1e97bb3fc5")
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Restaurant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f851c13-3f69-49e3-ba36-a008aac87a15"),
                            Address = "Centru",
                            Description = "E super central si chirica e patron",
                            Name = "Mamma mia"
                        },
                        new
                        {
                            Id = new Guid("15f2d9d8-cd24-4956-8400-4d1e97bb3fc5"),
                            Address = "Tatarasi",
                            Description = "E super in tatarasi si patron sunt eu",
                            Name = "Serginio"
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("226d9502-9b5c-480f-92fe-cd6d69bc0489"),
                            Email = "tudormanoleasa@gmail.com",
                            FirstName = "Tudor",
                            LastName = "Manoleasa",
                            Password = "parolatudormanoleasa"
                        },
                        new
                        {
                            Id = new Guid("4db60556-b7ff-4833-b60d-7328a4a016d7"),
                            Email = "roxana.apopei@yahoo.com",
                            FirstName = "Roxana",
                            LastName = "Apopei",
                            Password = "parolaroxanaapopei"
                        });
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Booking", b =>
                {
                    b.HasOne("RestaurantServiceProvider.Entities.Product", null)
                        .WithMany("Bookings")
                        .HasForeignKey("ProductId");

                    b.HasOne("RestaurantServiceProvider.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestaurantServiceProvider.Entities.Product", b =>
                {
                    b.HasOne("RestaurantServiceProvider.Entities.Booking", null)
                        .WithMany("Products")
                        .HasForeignKey("BookingId");

                    b.HasOne("RestaurantServiceProvider.Entities.Restaurant", "Restaurant")
                        .WithMany("Products")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
